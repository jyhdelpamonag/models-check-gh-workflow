type_changed_list=""
current_model=""
changes_block=""

for file in ${{ steps.modified-models.outputs.models }}; do
  model_name=$(basename "$file" .cs)

  old_props=$(git show origin/development:"$file" | grep -E '^\s*public\s+(required\s+)?\w+\s+\w+\s*{' || true)
  new_props=$(cat "$file" | grep -E '^\s*public\s+(required\s+)?\w+\s+\w+\s*{' || true)

  while IFS= read -r old_line; do
    old_type=$(echo "$old_line" | sed -E 's/^\s*public\s+(required\s+)?(\w+)\s+(\w+).*/\2/')
    old_name=$(echo "$old_line" | sed -E 's/^\s*public\s+(required\s+)?(\w+)\s+(\w+).*/\3/')
    new_line=$(echo "$new_props" | grep -E "\b$old_name\b" || true)

    if [ -n "$new_line" ]; then
      new_type=$(echo "$new_line" | sed -E 's/^\s*public\s+(required\s+)?(\w+)\s+(\w+).*/\2/')
      if [ "$old_type" != "$new_type" ]; then
        if [ "$current_model" != "$model_name" ]; then
          # flush previous block if switching model
          if [ -n "$changes_block" ]; then
            type_changed_list+="$changes_block\n"
          fi
          changes_block="- $model_name\n"
          current_model="$model_name"
        fi
        changes_block+="  - $old_name: $old_type â†’ $new_type\n"
      fi
    fi
  done <<< "$old_props"
done

# flush last block
if [ -n "$changes_block" ]; then
  type_changed_list+="$changes_block\n"
fi

# Export
echo "type_changed_properties_list<<EOF" >> $GITHUB_OUTPUT
echo -e "$type_changed_list" >> $GITHUB_OUTPUT
echo "EOF" >> $GITHUB_OUTPUT