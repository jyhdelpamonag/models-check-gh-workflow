- name: Get deployment approval info
  id: get_approval_info
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    REPO: ${{ github.repository }}
  run: |
    owner=$(echo "$REPO" | cut -d/ -f1)
    repo=$(echo "$REPO" | cut -d/ -f2)

    deployment_id=${{ steps.get_deployment.outputs.deployment_id }}

    echo "Fetching statuses for deployment ID $deployment_id..."

    statuses_json=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
      "https://api.github.com/repos/$owner/$repo/deployments/$deployment_id/statuses")

    # Get the latest deployment status object
    latest_status=$(echo "$statuses_json" | jq '.[0]')

    state=$(echo "$latest_status" | jq -r '.state')
    approver_login=$(echo "$latest_status" | jq -r '.creator.login')

    echo "Approval state: $state"
    echo "Approver username: $approver_login"

    # Fetch full name of approver
    full_name=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
      "https://api.github.com/users/$approver_login" | jq -r '.name')

    # Fallback to login if full name is null or empty
    if [ -z "$full_name" ] || [ "$full_name" == "null" ]; then
      full_name="$approver_login"
    fi

    echo "Approver full name: $full_name"

    echo "approval_state=$state" >> $GITHUB_OUTPUT
    echo "approval_user=$approver_login" >> $GITHUB_OUTPUT
    echo "approval_user_fullname=$full_name" >> $GITHUB_OUTPUT
