name: Check Models

on: 
  workflow_dispatch:
  pull_request:
    paths:
      - 'models/**'

jobs:
  detect-breaking-changes:
    runs-on: ubuntu-latest
    outputs:
      breaking_changes_found: ${{ steps.detect.outputs.breaking_changes_found }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Fetch main branch
        run: git fetch origin main

      - name: Detect breaking changes
        id: detect
        run: |
          breaking_changes_found=false

          deleted_models=$(git diff --name-status origin/main -- models | grep '^D' || true)
          if [ -n "$deleted_models" ]; then
            echo "Deleted models detected:"
            echo "$deleted_models"
            breaking_changes_found=true
          fi

          renamed_models=$(git diff --name-status origin/main -- models | grep '^R' || true)
          if [ -n "$renamed_models" ]; then
            echo "Renamed models detected:"
            echo "$renamed_models"
            breaking_changes_found=true
          fi

          modified_models=$(git diff --name-only origin/main -- models | grep -E '\.cs$' || true)
          modified_list=()
          if [ -n "$modified_models" ]; then
            for model in $modified_models; do
              removed_lines=$(git diff origin/main -- "$model" | grep '^-' | grep -v '^---' | grep -v '^-\s*//' | grep -v '^\s*$' | wc -l)
              if [ "$removed_lines" -gt 0 ]; then
                modified_list+=("$model")
                breaking_changes_found=true
              fi
            done
          fi

          if [ ${#modified_list[@]} -gt 0 ]; then
            echo "Models with modified/deleted properties:"
            for m in "${modified_list[@]}"; do
              echo "- $m"
            done
          fi

          echo "::set-output name=breaking_changes_found::$breaking_changes_found"

  approval:
    needs: detect-breaking-changes
    runs-on: ubuntu-latest
    if: needs.detect-breaking-changes.outputs.breaking_changes_found == 'true'
    environment:
      name: dev
    steps:
      - name: Await manual approval
        run: echo "Manual approval received, continuing workflow."

  continue-if-no-breaking-or-approved:
    needs: [detect-breaking-changes, approval]
    runs-on: ubuntu-latest
    if: needs.detect-breaking-changes.outputs.breaking_changes_found == 'false' || needs.approval.result == 'success'
    steps:
      - name: Proceed with remaining steps
        run: echo "No breaking changes found or approval granted, workflow continues."
