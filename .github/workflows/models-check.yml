name: Check Models

on: 
  workflow_dispatch:
  pull_request:
    paths:
      - 'models/**'

jobs:
  check-models:
    runs-on: ubuntu-latest
    environment:
      name: dev

    outputs:
      breaking_changes_found: ${{ steps.breaking-changes.outputs.breaking_changes_found }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Fetch main branch
        run: git fetch origin main
      
      - name: Detect breaking changes
        id: breaking-changes
        run: |
          breaking_changes_found=false
          # Check deleted models
          deleted_models=$(git diff --name-status origin/main -- models | grep '^D' || true)
          if [ -n "$deleted_models" ]; then
            echo "Deleted models:"
            echo "$deleted_models"
            breaking_changes_found=true
          fi

          # Check renamed models
          renamed_models=$(git diff --name-status origin/main -- models | grep '^R' || true)
          if [ -n "$renamed_models" ]; then
            echo "Renamed models:"
            echo "$renamed_models"
            breaking_changes_found=true
          fi

          # Check modified properties (simplified your original logic)
          modified_models=$(git diff --name-only origin/main -- models | grep -E '\.cs$' || true)
          modified_list=()
          if [ -n "$modified_models" ]; then
            for model in $modified_models; do
              removed_lines=$(git diff origin/main -- "$model" | grep '^-' | grep -v '^---' | grep -v '^-\s*//' | grep -v '^\s*$' | wc -l)
              if [ "$removed_lines" -gt 0 ]; then
                modified_list+=("$model")
                breaking_changes_found=true
              fi
            done
          fi

          if [ ${#modified_list[@]} -gt 0 ]; then
            echo "Models with modified/deleted properties:"
            for m in "${modified_list[@]}"; do
              echo "- $m"
            done
          fi

          echo "::set-output name=breaking_changes_found::$breaking_changes_found"

      - name: Approve breaking changes
        if: steps.breaking-changes.outputs.breaking_changes_found == 'true'
        run: echo "Waiting for manual approval..."

      - name: Fail if breaking changes found but no approval
        if: steps.breaking-changes.outputs.breaking_changes_found == 'true' && github.event_name != 'workflow_dispatch'
        run: |
          echo "Breaking changes found and approval not granted. Failing the workflow."
          exit 1

      - name: Passed
        if: steps.breaking-changes.outputs.breaking_changes_found == 'false'
        run: echo "All checks passed. No breaking changes found."
